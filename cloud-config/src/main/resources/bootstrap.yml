spring:
  application:
    name: CLOUD-CONFIG # Matches the name in application.yml
  cloud:
    # If cloud-config itself needed to fetch config from another config server (not typical for the server itself)
    # config:
    #   uri: http://another-config-server:port

eureka:
  client:
    service-url:
      # This environment variable should be available in the cloud-config deployment
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://service-discovery:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true # Config server might want to know about other services
  instance:
    prefer-ip-address: true
    # Optional: Customize how CLOUD-CONFIG appears in Eureka
    # hostname: ${spring.application.name}
    # appname: ${spring.application.name} 