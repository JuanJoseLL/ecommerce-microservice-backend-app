# Configuración de Pruebas de Rendimiento
# =====================================
# Este archivo contiene configuraciones predefinidas para diferentes tipos de pruebas

[DEFAULT]
host = http://host.docker.internal
results_dir = performance_results

# Configuraciones de Prueba
# ========================

[exploratory]
# Prueba exploratoria - baja carga para verificar funcionamiento
users = 5
spawn_rate = 1
duration = 60
description = Prueba exploratoria con baja carga

[normal_load]
# Prueba de carga normal - simula uso típico
users = 25
spawn_rate = 3
duration = 300
description = Prueba de carga normal para uso típico

[stress_test]
# Prueba de stress - alta carga para encontrar límites
users = 50
spawn_rate = 5
duration = 600
description = Prueba de stress para encontrar límites del sistema

[peak_load]
# Prueba de pico - simula picos de tráfico
users = 100
spawn_rate = 10
duration = 300
description = Prueba de pico para simular tráfico alto

[endurance]
# Prueba de resistencia - carga moderada por tiempo prolongado
users = 30
spawn_rate = 3
duration = 1800
description = Prueba de resistencia por tiempo prolongado

# Configuraciones Específicas por Servicio
# ========================================

[products_service]
# Configuración específica para pruebas de productos
base_users = 20
max_users = 80
target_rps = 100
critical_endpoints = /api/products, /api/products/{id}

[orders_service]
# Configuración específica para pruebas de órdenes
base_users = 10
max_users = 40
target_rps = 50
critical_endpoints = /api/orders

[users_service]
# Configuración específica para pruebas de usuarios
base_users = 15
max_users = 60
target_rps = 75
critical_endpoints = /api/users, /api/users/{id}

# Thresholds de Rendimiento
# ========================

[performance_thresholds]
# Tiempos de respuesta máximos aceptables (en segundos)
product_listing_max_time = 2.0
product_detail_max_time = 1.0
order_creation_max_time = 3.0
user_registration_max_time = 2.0
user_query_max_time = 1.0

# Tasa de errores máxima aceptable (porcentaje)
max_error_rate = 5.0

# Throughput mínimo esperado (requests por segundo)
min_throughput_products = 50
min_throughput_orders = 20
min_throughput_users = 30

# Configuración de Docker Desktop
# ==============================

[docker_environment]
api_gateway_port = 8080
proxy_client_internal_port = 8700
product_service_internal_port = 8701
user_service_internal_port = 8702
order_service_internal_port = 8703
payment_service_internal_port = 8704
shipping_service_internal_port = 8705

# URLs internas para pruebas directas (opcional)
proxy_client_direct_url = http://localhost:8700
product_service_direct_url = http://localhost:8701
user_service_direct_url = http://localhost:8702

# Configuración de Reportes
# ========================

[reporting]
generate_html_reports = true
generate_csv_stats = true
save_response_times = true
capture_failures = true
detailed_logging = true

# Formatos de archivo de salida
html_template = standard
csv_delimiter = ,
json_pretty_print = true

# Configuración de Monitoreo
# =========================

[monitoring]
# Monitoreo del sistema durante las pruebas
monitor_cpu = true
monitor_memory = true
monitor_network = false
monitor_disk = false

# Intervalos de muestreo (en segundos)
cpu_sample_interval = 5
memory_sample_interval = 5

# Alertas automáticas
enable_alerts = true
cpu_alert_threshold = 80
memory_alert_threshold = 85
